# Generated by Django 3.2 on 2023-06-09 01:44

import apps.authenticate.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.images
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('taxpayer_identification', models.CharField(max_length=13, unique=True)),
                ('image', models.ImageField(blank=True, max_length=255, null=True, storage=utils.images.OverwriteImage(), upload_to=utils.images.upload_to)),
                ('is_clinic', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.PositiveSmallIntegerField(choices=[(1, 'user'), (2, 'billing'), (3, 'clinical'), (4, 'extra'), (5, 'financy'), (6, 'marketing'), (7, 'scheduler')], unique=True)),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.license')),
            ],
            options={
                'verbose_name': 'module',
                'verbose_name_plural': 'modules',
                'db_table': 'module',
            },
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(max_length=255)),
                ('code', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(10000)])),
                ('taxpayer_identification', models.CharField(max_length=20, unique=True)),
                ('natural_person', models.BooleanField(default=False)),
                ('domain', models.CharField(default='admin', max_length=150, unique=True)),
                ('account', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('headquarters', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch', to='authenticate.clinic')),
                ('license', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='billing.license')),
            ],
            options={
                'verbose_name': 'clinic',
                'verbose_name_plural': 'clinics',
                'db_table': 'clinic',
            },
            managers=[
                ('objects', apps.authenticate.models.DomainManager()),
            ],
        ),
    ]
