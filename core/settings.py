"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
from os import environ
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "=%u8t#$)rqtu^%b%)%s$xo=u!pwv)44_d(%^wc)51wa!)oogd*"

SIGNING_KEY = "4@owu(!2yd65ez8en0&32j-h#=@ak3@@1w$z=ju$#8n)1uy&^8"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

ROOT_HOSTCONF = "core.hosts"
DEFAULT_HOST = "api"

PUBLIC_SCHEMA_URLCONF = "core.urls"

SHARED_APPS = (
    "tenant_schemas",  # mandatory, should always be before any django app
    "apps.authenticate",
    "django.contrib.contenttypes",
    # everything below here is optional
    "django.contrib.auth",
    "django.contrib.sessions",
    "django.contrib.messages",
)

TENANT_APPS = (
    "django.contrib.contenttypes",
    # your tenant-specific apps
    "apps.billing",
    "apps.clinical",
    "apps.extra",
    "apps.financy",
    "apps.marketing",
    "apps.scheduler",
)

# Application definition

INSTALLED_APPS = [
    "tenant_schemas",  # need be first
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # third
    "corsheaders",
    "rest_framework",
    "knox",
    "drf_yasg",
    "django_filters",
    "django_extensions",
    "django_hosts",
    # author
    "apps.authenticate",
    "apps.billing",
    "apps.clinical",
    "apps.extra",
    "apps.financy",
    "apps.marketing",
    "apps.scheduler",
    "utils",
]

TENANT_MODEL = "authenticate.Clinic"
AUTH_USER_MODEL = "authenticate.User"

DEFAULT_AUTHENTICATION_CLASSES = [
    "knox.auth.TokenAuthentication",
]

DEFAULT_FILTER_BACKENDS = [
    "django_filters.rest_framework.DjangoFilterBackend",
]

DEFAULT_PAGINATION_CLASS = "django_filters.rest_framework.DjangoFilterBackend"

DEFAULT_PERMISSION_CLASSES = [
    "utils.custom_permissions.CustomDjangoModelPermissions",
]

REST_FRAMEWORK = {
    # Return 'error' key instead of non_field_errors_key
    "NON_FIELD_ERRORS_KEY": "error",
    "DEFAULT_AUTHENTICATION_CLASSES": DEFAULT_AUTHENTICATION_CLASSES,
    "DEFAULT_PERMISSION_CLASSES": DEFAULT_PERMISSION_CLASSES,
    "DEFAULT_FILTER_BACKENDS": DEFAULT_FILTER_BACKENDS,
    "DEFAULT_PAGINATION_CLASS": DEFAULT_PAGINATION_CLASS,
    "PAGE_SIZE": 12,
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {"anon": "200/day", "user": "30000/day"},
}

REST_KNOX = {
    "SECURE_HASH_ALGORITHM": "cryptography.hazmat.primitives.hashes.SHA512",
    "AUTH_TOKEN_CHARACTER_LENGTH": 64,
    "TOKEN_TTL": timedelta(hours=10),
    "USER_SERIALIZER": None,
    "TOKEN_LIMIT_PER_USER": 2,
    "AUTO_REFRESH": False,
}

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "DEFAULT_GENERATOR_CLASS": "rest_framework.schemas.generators.BaseSchemaGenerator",
        "Token": {"type": "apiKey", "name": "Authorization", "in": "header"},
    }
}

MIDDLEWARE = [
    "django_hosts.middleware.HostsRequestMiddleware",
    "utils.base.middleware.CurrentDomainMiddleware",
    "tenant_schemas.middleware.TenantMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_hosts.middleware.HostsResponseMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

TEMPLATE_CONTEXT_PROCESSORS = ("django.core.context_processors.request",)

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": environ.get("ENGINE_DB"),
        "NAME": environ.get("NAME_DB"),
        "USER": environ.get("USER_DB"),
        "PASSWORD": environ.get("PASSWORD_DB"),
        "HOST": environ.get("HOST_DB"),
        "PORT": environ.get("PORT_DB"),
    }
}

DATABASE_ROUTERS = ("tenant_schemas.routers.TenantSyncRouter",)

# Password validation
MIN_LENGTH_PASSWORD = 8
SPECIAL_CHAR = ["!", "@", "#", "_", ".", "+", "-", "*"]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/Bahia"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# LOCALE_PATHS = [
#     os.path.join(BASE_DIR, "locale"),
# ]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

MEDIA_ROOT = "/data/media"
MEDIA_URL = "/media/"
DEFAULT_FILE_STORAGE = "tenant_schemas.storage.TenantFileSystemStorage"

EMAIL_BACKEND = environ.get("EMAIL_BACKEND")
ANYMAIL = {
    "SENDINBLUE_API_KEY": environ.get("SMTP_KEY"),
}

SENDINBLUE_API_URL = environ.get("SMTP_URL")
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = "pgls.dev@gmail.com"
EMAIL_HOST_PASSWORD = "lol121197!"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
